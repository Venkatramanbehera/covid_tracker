{"version":3,"sources":["InfoBox.js","Table.js","LineGraph.js","BarGraph.js","App.js","util.js","index.js"],"names":["InfoBox","props","title","cases","total","Card","className","CardContent","Typography","color","Table","countries","map","country","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","caseType","useState","setData","useEffect","axios","get","then","res","chartData","lastDataPoint","date","newDataPoint","x","y","push","buildChartData","catch","err","console","log","Object","keys","length","datasets","fill","borderColor","tension","beginAtZero","BarGraph","barChartData","setBarChartData","barChartDate","setBarChartDate","result","d","extractedData","extractedDate","message","labels","backgroundColor","borderWidth","App","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","name","iso2","sortedData","sort","a","b","sortData","FormControl","variant","Select","onChange","e","countryCode","target","url","MenuItem","i","todayCases","todayRecovered","recovered","todayDeaths","deaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c72f47a.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './InfoBox.css'\r\n\r\nconst InfoBox = (props) => {\r\n    const { title, cases, total } = props\r\n    return (\r\n        <Card className=\"infoBox\">\r\n            <CardContent>\r\n                <Typography color=\"textSecondary\" className=\"infoBox__title\">\r\n                    { title }\r\n                </Typography>\r\n                <h2 className=\"infoBox__cases\"> { cases } </h2>\r\n                <Typography color=\"textSecondary\" className=\"infoBox__total\">\r\n                    { total } Total\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default InfoBox","import React from 'react'\r\nimport './Table.css'\r\n\r\nconst Table = (props) => {\r\n    const { countries } = props\r\n\r\n    return (\r\n        <div className=\"table\">\r\n            <table className=\"table__data\">\r\n                <tbody>\r\n                {\r\n                    countries.map(({ country, cases}) => {\r\n                        return <tr key={ country }>\r\n                            <td>{ country }</td>\r\n                            <td>{ cases }</td>\r\n                        </tr>\r\n                    })\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import axios from 'axios'\r\nimport numeral from 'numeral'\r\nimport React, { useState,useEffect } from 'react'\r\nimport { Line } from 'react-chartjs-2'\r\n\r\nconst options = {\r\n    legend: {\r\n      display: false,\r\n    },\r\n    elements: {\r\n      point: {\r\n        radius: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n      callbacks: {\r\n        label: function (tooltipItem, data) {\r\n          return numeral(tooltipItem.value).format(\"+0,0\");\r\n        },\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          type: \"time\",\r\n          time: {\r\n            format: \"MM/DD/YY\",\r\n            tooltipFormat: \"ll\",\r\n          },\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n          },\r\n          ticks: {\r\n            // Include a dollar sign in the ticks\r\n            callback: function (value, index, values) {\r\n              return numeral(value).format(\"0a\");\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n\r\nconst buildChartData = (data, caseType='cases') => {\r\n    const chartData = []\r\n    let lastDataPoint;\r\n    \r\n    for(let date in data.cases) {\r\n        if(lastDataPoint){\r\n            const newDataPoint = {\r\n                x : date,\r\n                y : data[caseType][date] - lastDataPoint\r\n            }\r\n            chartData.push(newDataPoint)\r\n        }\r\n        lastDataPoint = data[caseType][date]\r\n    }\r\n    return chartData\r\n}\r\n\r\nconst LineGraph = ({ caseType = \"cases\"}) => {\r\n    const [ data, setData ] = useState({})\r\n\r\n    \r\n    useEffect(() => {\r\n        axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=100')\r\n        .then( (res) => {\r\n            const resData = res.data\r\n            const chartData = buildChartData(resData)\r\n            setData(chartData)\r\n        })\r\n        .catch( (err) => {\r\n            console.log(err)\r\n        })\r\n    },[ caseType ])\r\n    \r\n    return (\r\n        <div className=\"line__graph\">\r\n            {\r\n                Object.keys(data).length > 0 && <Line data={ {\r\n                    datasets : [\r\n                        {\r\n                            label: 'Cases',\r\n                            data : data,\r\n                            fill: false,\r\n                            borderColor: 'rgb(75, 192, 192)',\r\n                            tension : 0.1\r\n                        }\r\n                    ]\r\n                } } options={ options }/>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n","import React,{ useState,useEffect } from 'react'\r\nimport { Card, CardContent } from '@material-ui/core'\r\nimport { Bar } from 'react-chartjs-2'\r\nimport axios from 'axios';\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n\r\nconst extractedData = (data) => {\r\n    const result = []\r\n    for( let d in data){\r\n        result.push(data[d])\r\n    }\r\n    return result\r\n}\r\n\r\nconst extractedDate = (data) => {\r\n    const result = []\r\n    for( let date in data){\r\n        result.push(date)\r\n    }\r\n    return result\r\n}\r\n\r\nconst BarGraph = (props) => {\r\n    const [ barChartData, setBarChartData ] = useState([])\r\n    const [ barChartDate, setBarChartDate ] = useState([])\r\n    \r\n    useEffect(() => {\r\n        axios.get('https://disease.sh/v3/covid-19/vaccine/coverage?lastdays=6&fullData=false')\r\n        .then((res) => {\r\n            const data = extractedData(res.data);\r\n            setBarChartData(data)\r\n            const date = extractedDate(res.data)\r\n            setBarChartDate(date)\r\n        })\r\n        .catch((err) => {\r\n            console.log(err.message)\r\n        })\r\n    },[])\r\n    \r\n    const data = {\r\n        labels: barChartDate,\r\n        datasets: [\r\n          {\r\n            label: 'world wide vactine taken',\r\n            data: barChartData,\r\n            backgroundColor:[\r\n                'rgba(255, 99, 132, 0.2)',\r\n                'rgba(54, 162, 235, 0.2)',\r\n                'rgba(255, 206, 86, 0.2)',\r\n                'rgba(75, 192, 192, 0.2)',\r\n                'rgba(153, 102, 255, 0.2)',\r\n                'rgba(255, 159, 64, 0.2)',\r\n              ],\r\n            borderColor: [\r\n                'rgba(255, 99, 132, 1)',\r\n                'rgba(54, 162, 235, 1)',\r\n                'rgba(255, 206, 86, 1)',\r\n                'rgba(75, 192, 192, 1)',\r\n                'rgba(153, 102, 255, 1)',\r\n                'rgba(255, 159, 64, 1)',\r\n              ],\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      };\r\n\r\n    return (\r\n        <div className=\"bar__graph\">\r\n            <Card>\r\n                <CardContent>\r\n                    <Bar data={data} options={options} />\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BarGraph\r\n","import React, { useState, useEffect }  from 'react'\nimport './app.css'\n\nimport { FormControl, MenuItem, Select, Card, CardContent } from '@material-ui/core'\nimport axios from 'axios'\nimport InfoBox from './InfoBox'\nimport Table from './Table'\nimport LineGraph from './LineGraph'\n\nimport { sortData } from './util'\nimport BarGraph from './BarGraph'\n\nconst App = (props) => {\n\n  const [ countries, setCountries ] = useState([])\n  const [ country, setCountry ] = useState('worldwide')\n  const [ countryInfo, setCountryInfo ] = useState({})\n  const [ tableData, setTableData ] = useState([])\n\n  useEffect(() => {\n    axios.get('https://disease.sh/v3/covid-19/all')\n      .then((res) => {\n        setCountryInfo(res.data)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  },[]) \n\n  useEffect(() => {\n    axios.get('https://disease.sh/v3/covid-19/countries')\n      .then((res) => {\n        const countries = res.data.map((country) => {\n          return {\n            name : country.country,\n            value : country.countryInfo.iso2\n          }\n        })\n        const sortedData = sortData(res.data)\n        setTableData(sortedData)\n        setCountries(countries)\n      })\n      .catch((err) => {\n        console.log(err)\n      })\n  },[])\n\n  const handleSelect = (e) => {\n    const countryCode = e.target.value\n    const url = countryCode === 'worldwide' \n      ? 'https://disease.sh/v3/covid-19/all' \n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n\n    axios.get(url)\n      .then((res) => {\n        setCountry(countryCode)\n        setCountryInfo(res.data)\n      })\n  }\n\n  \n  return (\n      <div className = \"app\">\n        <div className=\"app__left\">\n            <div className=\"app__header\">\n\n              <h1>COVID 19 TRACKER</h1>\n\n              <FormControl className=\"app__dropdown\" variant='outlined'>\n                  <Select value={country} onChange={ handleSelect } >\n                    <MenuItem value=\"worldwide\">WorldWide</MenuItem>\n                    {\n                      countries.map((country,i) => {\n                        return <MenuItem \n                          value={ country.value } \n                          key={ i }>{ country.name }</MenuItem>\n                      })\n                    }\n                  </Select>\n              </FormControl>\n\n\n            </div>\n            \n            <div className=\"app__stats\">\n              <InfoBox \n                title=\"coronavirus cases\" \n                cases={ countryInfo.todayCases} \n                total={ countryInfo.cases }/>\n\n              <InfoBox \n                title=\"recovered\" \n                cases={ countryInfo.todayRecovered} \n                total={ countryInfo.recovered}/>\n\n              <InfoBox \n                title=\"death\" \n                cases={ countryInfo.todayDeaths} \n                total={ countryInfo.deaths }/>\n\n            </div>\n            {/* Vactine information */}\n\n            <div className=\"vaccine__informAtion\">\n              <h1>COVID 19 VACTINE INFORMATION</h1>\n              {/* bargraph of 5days vactine details */}\n              <BarGraph/>\n            </div>\n        </div>\n        <Card className=\"app__right\">\n          <CardContent>\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            <h3>WorldWide New Cases</h3>\n            <LineGraph caseType=\"cases\"/>\n          </CardContent>\n        </Card>\n      </div>\n  )\n}\n\nexport default App\n","export const sortData = (data) => {\r\n    const sortedData = [...data]\r\n    sortedData.sort((a, b) => {\r\n        if(a.cases > b.cases){\r\n            return -1\r\n        }else{\r\n            return 1\r\n        }\r\n    })\r\n    return sortedData\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'))"],"sourceRoot":""}